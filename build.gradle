buildscript {
    ext {
        kotlin_version = '1.2.31'
        protobufPluginVersion = '0.8.4'
        protocVersion = '3.5.1'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
        classpath "com.google.protobuf:protobuf-gradle-plugin:$protobufPluginVersion"
    }
}

group 'io.github.gaplotech'
version '0.1.1'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
apply plugin: 'org.junit.platform.gradle.plugin'

apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // protobuf
    compile "com.google.protobuf:protobuf-java:$protocVersion"
    compile "com.google.protobuf:protobuf-java-util:$protocVersion"

    // bson
    compile 'org.mongodb:bson:3.6.3'

    // KMongo
    testCompile 'org.litote.kmongo:kmongo-coroutine:3.6.2'
    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.0.4'
    testCompile "org.jetbrains.kotlinx:kotlinx-coroutines-core:0.22.3"

}


sourceSets {

    test {
        java {
            srcDirs += "${protobuf.generatedFilesBaseDir}/test/kotlin"
        }
    }

}
protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protocVersion"
    }
    generateProtoTasks {
        all().each { task ->
            // Here you can configure the task
        }
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin.experimental.coroutines 'enable'

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar, javadocJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name "${project.group}:${rootProject.name}"
                packaging 'jar'
                description "Provide a Protobuf BSON Codec for MongoDB, written by Kotlin"
                url "https://github.com/gaplotech/kotlin-protobuf-bson-codec"

                scm {
                    connection 'scm:git:git://github.com/gaplotech/kotlin-protobuf-bson-codec.git'
                    developerConnection 'scm:git:ssh://github.com/gaplotech/kotlin-protobuf-bson-codec.git'
                    url 'https://github.com/gaplotech/kotlin-protobuf-bson-codec'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'gaplotech'
                        name 'Gary LO'
                        email 'gaplotech@gmail.com'
                        organization 'Gapæ’ˆTech'
                        organizationUrl 'https://blog.gaplotech.com'
                    }
                }
            }
        }
    }
}